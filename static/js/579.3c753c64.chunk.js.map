{"version":3,"file":"static/js/579.3c753c64.chunk.js","mappings":"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","sources":["utils/capitalize.js","components/FormField/FormField.jsx","components/Section/SectionStyles.js","components/Section/Section.jsx","utils/getDefaultValues.js","components/ModalWindow/ModalWindowStyles.js","components/ModalWindow/ModalWindow.jsx","components/UpdateContactForm/consts/inputValidation.js","components/UpdateContactForm/consts/inputsList.js","components/UpdateContactForm/UpdateContactFormStyles.js","components/UpdateContactForm/UpdateContactForm.jsx","components/ContactItem/ContactItemStyles.js","components/ContactItem/ContactItem.jsx","components/InfoText/InfoTextStyles.js","components/InfoText/InfoText.jsx","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyles.js","components/Filter/Filter.jsx","components/AddContactButton/AddContactButtonStyles.js","components/AddContactButton/AddContactButton.jsx","components/AddContactForm/consts/inputValidation.js","components/AddContactForm/consts/inputsList.js","components/AddContactForm/AddContactForm.jsx","views/ContactsView.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/PersonAdd.js"],"sourcesContent":["export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import PropTypes from 'prop-types';\nimport { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport const FormField = ({\n  inputName,\n  type,\n  id,\n  register,\n  isError,\n  getErrorMassage,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl error={isError(inputName)}>\n      <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n      {type !== 'password' ? (\n        <OutlinedInput\n          id={id}\n          type={type}\n          label={capitalize(inputName)}\n          aria-describedby={id}\n          required\n          {...register(inputName)}\n        />\n      ) : (\n        <OutlinedInput\n          id={id}\n          type={showPassword ? 'text' : 'password'}\n          label={capitalize(inputName)}\n          aria-describedby={id}\n          required\n          {...register(inputName)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      )}\n      {isError(inputName) && (\n        <FormHelperText id={id}>{getErrorMassage(inputName)}</FormHelperText>\n      )}\n    </FormControl>\n  );\n};\n\nFormField.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  isError: PropTypes.func.isRequired,\n  getErrorMassage: PropTypes.func.isRequired,\n};\n","export const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './SectionStyles';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","export const styles = {\n  wrap: {\n    display: 'inline-flex',\n    bgcolor: 'common.white',\n    padding: '20px',\n    borderRadius: '3px',\n    position: 'absolute',\n    top: { xs: '35%', sm: '50%' },\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n","import { Box, Modal } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './ModalWindowStyles';\n\nexport const ModalWindow = ({ children, onModalClose }) => {\n  return (\n    <Modal\n      open\n      onClose={onModalClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={styles.wrap}>{children}</Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  children: PropTypes.element,\n  onModalClose: PropTypes.func.isRequired,\n};\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst numberRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: Yup.string()\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import { nanoid } from 'nanoid';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nameInputId,\n  },\n  {\n    inputName: 'number',\n    type: 'tel',\n    id: numberInputId,\n  },\n];\n","export const styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    width: { xs: '330px', sm: '400px' },\n    margin: '0 auto',\n  },\n  btnList: { display: 'flex', justifyContent: 'center', gap: '20px' },\n};\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks';\nimport { updateContact } from 'redux/contacts/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './consts/inputValidation';\n\nimport { Box, Button } from '@mui/material';\nimport { FormField } from 'components/FormField';\nimport { inputsList } from './consts/inputsList';\n\nimport PropTypes from 'prop-types';\nimport { styles } from './UpdateContactFormStyles';\n\nexport const UpdateContactForm = ({ id, onModalClose }) => {\n  const { contacts } = useContacts();\n  const { name, number } = contacts.find(item => item.id === id);\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues: {\n      name,\n      number,\n    },\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const isInContacts = contacts.find(contact => contact.name === data.name);\n    if (isInContacts) return alert(`${data.name} is aready in contacts.`);\n    dispatch(updateContact({ id, ...data }));\n    reset();\n    onModalClose();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  const getErrorMassage = inputName => errors[inputName].message;\n\n  return (\n    <Box component=\"form\" sx={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          isError={isError}\n          getErrorMassage={getErrorMassage}\n        />\n      ))}\n      <Box sx={styles.btnList}>\n        <Button type=\"submit\" variant=\"contained\">\n          Update Contact\n        </Button>\n        <Button type=\"button\" variant=\"outlined\" onClick={() => onModalClose()}>\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nUpdateContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  onModalClose: PropTypes.func.isRequired,\n};\n","export const styles = {\n  item: {\n    padding: '10px',\n    bgcolor: 'primary.50',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  itemContentWrap: { display: 'flex', gap: '10px', alignItems: 'center' },\n  btnList: { display: 'flex', gap: '5px', alignItems: 'center' },\n};\n","import { memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Box, IconButton, Tooltip, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ModalWindow } from 'components/ModalWindow';\nimport { UpdateContactForm } from 'components/UpdateContactForm';\nimport { styles } from './ContactItemStyles';\n\nexport const ContactItem = memo(function ContactItem({ contact }) {\n  const [showModal, setShowModal] = useState(false);\n  const { id, name, number, avatar } = contact;\n  const dispatch = useDispatch();\n\n  const handleToggleModal = () => setShowModal(!showModal);\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Box component=\"li\" sx={styles.item}>\n        <Box sx={styles.itemContentWrap}>\n          <Avatar alt={avatar.alt} src={avatar.src} />\n          <Box>\n            <Typography>{name}</Typography>\n            <Typography>{number}</Typography>\n          </Box>\n        </Box>\n        <Box component=\"ul\" sx={styles.btnList}>\n          <Tooltip title=\"Update contact\">\n            <IconButton aria-label=\"update\" onClick={handleToggleModal}>\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Dlete contact\">\n            <IconButton aria-label=\"delete\" onClick={handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      {showModal && (\n        <ModalWindow onModalClose={handleToggleModal}>\n          <UpdateContactForm id={id} onModalClose={handleToggleModal} />\n        </ModalWindow>\n      )}\n    </>\n  );\n});\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","export const styles = {\n  text: { textAlign: 'center', padding: '30px' },\n};\n","import { Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './InfoTextStyles';\n\nexport const InfoText = ({ children, color = 'common.black' }) => {\n  return (\n    <Typography component=\"p\" sx={{ ...styles.text, color }}>\n      {children}\n    </Typography>\n  );\n};\n\nInfoText.propTypes = {\n  children: PropTypes.any,\n  color: PropTypes.string,\n};\n","export const styles = {\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n  },\n};\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useContacts } from 'hooks';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { ContactItem } from 'components/ContactItem';\nimport { Loader } from 'components/Loader';\nimport { InfoText } from 'components/InfoText';\nimport { List } from '@mui/material';\nimport { styles } from './ContactListStyles';\n\nexport const ContactList = () => {\n  const { isLoading, error, contacts } = useContacts();\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOk = !isLoading && !error;\n  const showError = !isLoading && error;\n  const empty = isOk && filter === '' && contacts.length === 0;\n  const noMatches = isOk && filter !== '' && contacts.length === 0;\n  const showList = !error && contacts.length !== 0;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {showList && (\n        <List sx={styles.list}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n      {showError && <InfoText>Sorry, something went wrong</InfoText>}\n      {empty && <InfoText>Your contacts list is empty</InfoText>}\n      {noMatches && <InfoText>Sorry, there is no such contacts</InfoText>}\n    </>\n  );\n};\n","export const styles = {\n  wrap: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { nanoid } from 'nanoid';\nimport { Box, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nimport { styles } from './FilterStyles';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => dispatch(setFilter(e.currentTarget.value.trim()));\n\n  return (\n    <Box sx={styles.wrap}>\n      <FormControl sx={{ width: '350px' }}>\n        <InputLabel htmlFor={filterId}>Search</InputLabel>\n        <OutlinedInput\n          id={filterId}\n          type=\"text\"\n          label=\"Search\"\n          onChange={handleChange}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","export const styles = {\n  btn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '14px',\n    bgcolor: 'primary.400',\n    color: 'common.white',\n    position: 'fixed',\n    top: '87%',\n    left: { xs: '80%', sm: '90%' },\n    '&:hover': {\n      bgcolor: 'primary.300',\n    },\n  },\n};\n","import { IconButton, Tooltip } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport PropTypes from 'prop-types';\nimport { styles } from './AddContactButtonStyles';\n\nexport const AddContactButton = ({ onOpenModal }) => (\n  <Tooltip title=\"Add contact\">\n    <IconButton\n      variant=\"contained\"\n      sx={styles.btn}\n      type=\"button\"\n      onClick={onOpenModal}\n    >\n      <PersonAddIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nAddContactButton.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst numberRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: Yup.string()\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import { nanoid } from 'nanoid';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nameInputId,\n  },\n  {\n    inputName: 'number',\n    type: 'tel',\n    id: numberInputId,\n  },\n];\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './consts/inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box, Button } from '@mui/material';\nimport { FormField } from 'components/FormField';\nimport { inputsList } from './consts/inputsList';\n\nimport PropTypes from 'prop-types';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const AddContactForm = ({ onModalClose }) => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues,\n  });\n  const { contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const isInContacts = contacts.find(contact => contact.name === data.name);\n    if (isInContacts) return alert(`${data.name} is aready in contacts.`);\n    dispatch(addContact(data));\n    reset();\n    onModalClose();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  const getErrorMassage = inputName => errors[inputName].message;\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        width: { xs: '330px', sm: '400px' },\n        margin: '0 auto',\n      }}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          isError={isError}\n          getErrorMassage={getErrorMassage}\n        />\n      ))}\n      <Box sx={{ display: 'flex', justifyContent: 'center', gap: '20px' }}>\n        <Button type=\"submit\" variant=\"contained\">\n          Add Contact\n        </Button>\n        <Button type=\"button\" variant=\"outlined\" onClick={() => onModalClose()}>\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nAddContactForm.propTypes = {\n  onModalClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { Section } from 'components/Section';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { AddContactButton } from 'components/AddContactButton';\nimport { ModalWindow } from 'components/ModalWindow';\nimport { AddContactForm } from 'components/AddContactForm';\n\nconst ContactsView = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal(!showModal);\n\n  return (\n    <>\n      <Section>\n        <Filter />\n      </Section>\n      <Section>\n        <ContactList />\n        <AddContactButton onOpenModal={toggleModal} />\n      </Section>\n      {showModal && (\n        <ModalWindow onModalClose={toggleModal}>\n          <AddContactForm onModalClose={toggleModal} />\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n\nexport default ContactsView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');\nexports.default = _default;"],"names":["capitalize","string","charAt","toUpperCase","slice","FormField","inputName","type","id","register","isError","getErrorMassage","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","OutlinedInput","label","required","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","Visibility","VisibilityOff","FormHelperText","styles","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","component","sx","Container","Typography","variant","getDefaultValues","arr","reduce","acc","item","wrap","display","bgcolor","padding","borderRadius","top","xs","sm","left","transform","ModalWindow","onModalClose","Modal","open","onClose","nameRegExp","RegExp","SignupSchema","Yup","shape","name","matches","number","inputsList","nanoid","form","flexDirection","gap","width","margin","btnList","justifyContent","UpdateContactForm","contacts","useContacts","find","useForm","resolver","yupResolver","defaultValues","errors","formState","handleSubmit","reset","dispatch","useDispatch","message","onSubmit","data","contact","alert","updateContact","map","Button","alignItems","itemContentWrap","ContactItem","memo","showModal","setShowModal","avatar","handleToggleModal","Avatar","alt","src","Tooltip","Edit","deleteContact","Delete","InfoText","color","list","ContactList","isLoading","filter","useSelector","selectFilter","useEffect","fetchContacts","isOk","showError","empty","length","noMatches","showList","Loader","List","filterId","Filter","onChange","e","setFilter","currentTarget","value","trim","btn","AddContactButton","onOpenModal","PersonAdd","AddContactForm","addContact","toggleModal","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}