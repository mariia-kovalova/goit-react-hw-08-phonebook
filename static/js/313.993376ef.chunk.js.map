{"version":3,"file":"static/js/313.993376ef.chunk.js","mappings":"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","sources":["components/GlobalStyles.styled.jsx","utils/capitalize.js","components/common/FormField/FormField.jsx","components/common/Section/Section.jsx","utils/getDefaultValues.js","components/RegisterForm/inputValidation.js","components/RegisterForm/inputsList.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView.jsx","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { List } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled(List)`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n","export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import PropTypes from 'prop-types';\nimport { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\n\nexport const FormField = ({\n  inputName,\n  type,\n  id,\n  register,\n  isError,\n  getErrorMassage,\n}) => {\n  return (\n    <FormControl error={isError(inputName)}>\n      <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n      <OutlinedInput\n        id={id}\n        type={type}\n        label={capitalize(inputName)}\n        aria-describedby={id}\n        {...register(inputName)}\n      />\n      {isError(inputName) && (\n        <FormHelperText id={id}>{getErrorMassage(inputName)}</FormHelperText>\n      )}\n    </FormControl>\n  );\n};\n\nFormField.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  isError: PropTypes.func.isRequired,\n  getErrorMassage: PropTypes.func.isRequired,\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={{ paddingTop: '20px', paddingBottom: '20px' }}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\">\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  email: Yup.string().email('Invalid email format').required(),\n  password: Yup.string()\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    .required(),\n});\n","import { nanoid } from 'nanoid';\n\nconst usernameInputId = nanoid();\nconst emailInputId = nanoid();\nconst passwordInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: usernameInputId,\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: emailInputId,\n  },\n  {\n    inputName: 'password',\n    type: 'password',\n    id: passwordInputId,\n  },\n];\n","import { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box } from '@mui/system';\nimport { FormField } from 'components/common/FormField';\nimport { inputsList } from './inputsList';\nimport { CommonButton } from 'components/common/CommonButton';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues,\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(registration(data));\n    console.log(data);\n    reset();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  const getErrorMassage = inputName => errors[inputName].message;\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        width: '400px',\n        margin: '0 auto',\n      }}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          isError={isError}\n          getErrorMassage={getErrorMassage}\n        />\n      ))}\n      <CommonButton type=\"submit\" fullWidth variant=\"contained\">\n        Register\n      </CommonButton>\n    </Box>\n  );\n};\n","import { Box, Avatar, Link, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Section } from 'components/common/Section';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { StyledLink } from 'components/GlobalStyles.styled';\n\nconst RegisterView = () => {\n  return (\n    <Section>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\n          Registration\n        </Typography>\n        <RegisterForm />\n        <Link component={StyledLink} sx={{ mt: 3 }} to=\"/login\">\n          Already have an account? Log in\n        </Link>\n      </Box>\n    </Section>\n  );\n};\n\nexport default RegisterView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["StyledLink","styled","List","Link","capitalize","string","charAt","toUpperCase","slice","FormField","inputName","type","id","register","isError","getErrorMassage","FormControl","error","InputLabel","htmlFor","OutlinedInput","label","FormHelperText","Section","title","children","Box","component","sx","paddingTop","paddingBottom","Container","Typography","variant","getDefaultValues","arr","reduce","acc","item","nameRegExp","RegExp","SignupSchema","Yup","shape","name","matches","required","email","password","min","inputsList","nanoid","defaultValues","RegisterForm","useForm","resolver","yupResolver","errors","formState","handleSubmit","reset","dispatch","useDispatch","message","display","flexDirection","gap","width","margin","onSubmit","data","registration","console","log","map","CommonButton","fullWidth","marginTop","alignItems","Avatar","m","bgcolor","LockOutlined","mb","mt","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","overridesResolver","props","styles","root","underline","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}