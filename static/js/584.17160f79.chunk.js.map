{"version":3,"file":"static/js/584.17160f79.chunk.js","mappings":"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","sources":["utils/capitalize.js","components/FormField/FormField.jsx","components/Section/SectionStyles.js","components/Section/Section.jsx","utils/getDefaultValues.js","components/LoginForm/consts/inputValidation.js","components/LoginForm/consts/inputsList.js","components/LoginForm/LoginFormStyles.js","components/LoginForm/LoginForm.jsx","views/LoginView.jsx","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import PropTypes from 'prop-types';\nimport { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport const FormField = ({\n  inputName,\n  type,\n  id,\n  register,\n  isError,\n  getErrorMassage,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl error={isError(inputName)}>\n      <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n      {type !== 'password' ? (\n        <OutlinedInput\n          id={id}\n          type={type}\n          label={capitalize(inputName)}\n          aria-describedby={id}\n          required\n          {...register(inputName)}\n        />\n      ) : (\n        <OutlinedInput\n          id={id}\n          type={showPassword ? 'text' : 'password'}\n          label={capitalize(inputName)}\n          aria-describedby={id}\n          required\n          {...register(inputName)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      )}\n      {isError(inputName) && (\n        <FormHelperText id={id}>{getErrorMassage(inputName)}</FormHelperText>\n      )}\n    </FormControl>\n  );\n};\n\nFormField.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  isError: PropTypes.func.isRequired,\n  getErrorMassage: PropTypes.func.isRequired,\n};\n","export const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './SectionStyles';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email format').required(),\n  password:\n    Yup.string()\n    .required(),\n});\n","import { nanoid } from 'nanoid';\n\nconst emailInputId = nanoid();\nconst passwordInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'email',\n    type: 'email',\n    id: emailInputId,\n  },\n  {\n    inputName: 'password',\n    type: 'password',\n    id: passwordInputId,\n  },\n];\n","export const styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    width: { xs: '330px', sm: '400px' },\n    margin: '0 auto',\n  },\n};\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './consts/inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box, Button } from '@mui/material';\nimport { FormField } from 'components/FormField';\nimport { inputsList } from './consts/inputsList';\nimport { styles } from './LoginFormStyles';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const LoginForm = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues,\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  const getErrorMassage = inputName => errors[inputName].message;\n  return (\n    <Box component=\"form\" sx={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          isError={isError}\n          getErrorMassage={getErrorMassage}\n        />\n      ))}\n      <Button type=\"submit\" fullWidth variant=\"contained\">\n        Log in\n      </Button>\n    </Box>\n  );\n};\n","import { Section } from 'components/Section';\nimport { Box, Avatar, Link, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport { LoginForm } from 'components/LoginForm';\nimport { StyledRouterLink } from 'components/GlobalStyles.styled';\n\nconst LoginView = () => {\n  return (\n    <Section>\n      <Box\n        sx={{\n          marginTop: 6,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\n          Sign in\n        </Typography>\n        <LoginForm />\n        <Link component={StyledRouterLink} sx={{ mt: 3 }} to=\"/register\">\n          Don't have an account? Register\n        </Link>\n      </Box>\n    </Section>\n  );\n};\n\nexport default LoginView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;"],"names":["capitalize","string","charAt","toUpperCase","slice","FormField","inputName","type","id","register","isError","getErrorMassage","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","OutlinedInput","label","required","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","Visibility","VisibilityOff","FormHelperText","styles","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","component","sx","Container","Typography","variant","getDefaultValues","arr","reduce","acc","item","SignupSchema","Yup","shape","email","password","inputsList","nanoid","form","display","flexDirection","gap","width","xs","sm","margin","defaultValues","LoginForm","useForm","resolver","yupResolver","errors","formState","handleSubmit","reset","dispatch","useDispatch","message","onSubmit","data","logIn","map","Button","fullWidth","marginTop","alignItems","Avatar","m","bgcolor","LockOutlined","mb","Link","StyledRouterLink","mt","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}