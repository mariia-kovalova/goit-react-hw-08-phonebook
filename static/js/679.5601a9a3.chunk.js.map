{"version":3,"file":"static/js/679.5601a9a3.chunk.js","mappings":"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","sources":["utils/capitalize.js","components/common/FormField/FormFieldStyles.js","components/common/FormField/FormField.jsx","components/common/Section/SectionStyles.js","components/common/Section/Section.jsx","hoc/withPrivatRedirect.jsx","utils/getDefaultValues.js","components/RegisterForm/consts/inputValidation.js","../node_modules/@mui/system/esm/Box/Box.js","components/RegisterForm/consts/inputsList.js","components/RegisterForm/RegisterFormStyles.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView.jsx","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","export const styles = {\n  error: { color: 'error.main', fontSize: '12px' },\n};\n","import PropTypes from 'prop-types';\nimport { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { styles } from './FormFieldStyles';\n\nexport const FormField = ({ inputName, type, id, register, errors }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  return (\n    <>\n      <FormControl error={isError(inputName)}>\n        <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n        {type !== 'password' ? (\n          <OutlinedInput\n            id={id}\n            type={type}\n            label={capitalize(inputName)}\n            aria-describedby={id}\n            {...register(inputName, { required: 'This field is required.' })}\n          />\n        ) : (\n          <OutlinedInput\n            id={id}\n            type={showPassword ? 'text' : 'password'}\n            label={capitalize(inputName)}\n            aria-describedby={id}\n            {...register(inputName, { required: 'This field is required.' })}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        )}\n        <FormHelperText\n          component={ErrorMessage}\n          id={id}\n          errors={errors}\n          name={inputName}\n          render={({ message }) => (\n            <Typography sx={styles.error}>{message}</Typography>\n          )}\n        />\n      </FormControl>\n    </>\n  );\n};\n\nFormField.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n","export const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './SectionStyles';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import { HOME_ROUTE } from 'consts/routes';\nimport { useAuth } from 'hooks';\nimport { Navigate } from 'react-router-dom';\n\nexport const withPrivatRedirect = (Component, redirectTo = HOME_ROUTE) => {\n  const ComponentWithRedirect = props => {\n    const { isLoggedIn } = useAuth();\n\n    return isLoggedIn ? <Navigate to={redirectTo} /> : <Component {...props} />;\n  };\n\n  return ComponentWithRedirect;\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  email: Yup.string().email('Invalid email format').required(),\n  password: Yup.string()\n    .required('This field is required')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { nanoid } from 'nanoid';\n\nconst usernameInputId = nanoid();\nconst emailInputId = nanoid();\nconst passwordInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: usernameInputId,\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: emailInputId,\n  },\n  {\n    inputName: 'password',\n    type: 'password',\n    id: passwordInputId,\n  },\n];\n","export const styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    width: { xs: '330px', sm: '400px' },\n    margin: '0 auto',\n  },\n  err: { marginTop: '10px', color: 'error.main' },\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './consts/inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box } from '@mui/system';\nimport { FormField } from 'components/common/FormField';\nimport { inputsList } from './consts/inputsList';\nimport { Button, Typography } from '@mui/material';\nimport { styles } from './RegisterFormStyles';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const RegisterForm = () => {\n  const [authErr, setAuthErr] = useState(null);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues,\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(registration(data)).unwrap().catch(setAuthErr);\n    reset();\n  };\n\n  return (\n    <>\n      <Box component=\"form\" sx={styles.form} onSubmit={handleSubmit(onSubmit)}>\n        {inputsList.map(({ inputName, type, id }) => (\n          <FormField\n            key={id}\n            inputName={inputName}\n            type={type}\n            id={id}\n            register={register}\n            errors={errors}\n          />\n        ))}\n        <Button type=\"submit\" fullWidth variant=\"contained\">\n          Register\n        </Button>\n      </Box>\n      {authErr && (\n        <Typography sx={styles.err}>Sorry, something went wrong</Typography>\n      )}\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { CONTACTS_ROUTE, LOGIN_ROUTE } from 'consts/routes';\nimport { withPrivatRedirect } from 'hoc/withPrivatRedirect';\n\nimport { Box, Avatar, Link, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Section } from 'components/common/Section';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { StyledRouterLink } from 'components/common/StyledRouterLink';\n\nconst styles = {\n  wrap: {\n    marginTop: 6,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: { m: 1, bgcolor: 'secondary.main' },\n  text: { mb: 3 },\n  link: { mt: 3 },\n};\nconst RegisterView = () => (\n  <>\n    <Helmet>\n      <title>Register</title>\n    </Helmet>\n    <Section>\n      <Box sx={styles.wrap}>\n        <Avatar sx={styles.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={styles.text}>\n          Registration\n        </Typography>\n        <RegisterForm />\n        <Link component={StyledRouterLink} sx={styles.link} to={LOGIN_ROUTE}>\n          Already have an account? Log in\n        </Link>\n      </Box>\n    </Section>\n  </>\n);\n\nexport default withPrivatRedirect(RegisterView, CONTACTS_ROUTE);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;"],"names":["capitalize","string","charAt","toUpperCase","slice","styles","error","color","fontSize","FormField","inputName","type","id","register","errors","useState","showPassword","setShowPassword","FormControl","isError","InputLabel","htmlFor","OutlinedInput","label","required","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","Visibility","VisibilityOff","FormHelperText","component","ErrorMessage","name","render","message","Typography","sx","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","Container","variant","withPrivatRedirect","Component","redirectTo","HOME_ROUTE","ComponentWithRedirect","props","useAuth","isLoggedIn","to","getDefaultValues","arr","reduce","acc","item","nameRegExp","RegExp","SignupSchema","Yup","shape","matches","email","password","min","createBox","inputsList","nanoid","form","display","flexDirection","gap","width","xs","sm","margin","err","marginTop","defaultValues","RegisterForm","authErr","setAuthErr","useForm","resolver","yupResolver","formState","handleSubmit","reset","dispatch","useDispatch","onSubmit","data","registration","unwrap","catch","map","Button","fullWidth","wrap","alignItems","avatar","m","bgcolor","text","mb","link","mt","Helmet","Avatar","LockOutlined","Link","StyledRouterLink","LOGIN_ROUTE","CONTACTS_ROUTE","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}