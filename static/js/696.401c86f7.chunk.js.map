{"version":3,"file":"static/js/696.401c86f7.chunk.js","mappings":"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","sources":["utils/capitalize.js","components/FormField/FormFieldStyles.js","components/FormField/FormField.jsx","components/Section/SectionStyles.js","components/Section/Section.jsx","utils/getDefaultValues.js","components/ModalWindow/ModalWindowStyles.js","components/ModalWindow/ModalWindow.jsx","components/UpdateContactForm/consts/inputValidation.js","components/UpdateContactForm/consts/inputsList.js","components/UpdateContactForm/UpdateContactFormStyles.js","components/UpdateContactForm/UpdateContactForm.jsx","components/ContactItem/ContactItemStyles.js","components/ContactItem/ContactItem.jsx","components/InfoText/InfoTextStyles.js","components/InfoText/InfoText.jsx","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyles.js","components/Filter/Filter.jsx","components/AddContactButton/AddContactButtonStyles.js","components/AddContactButton/AddContactButton.jsx","components/AddContactForm/consts/inputValidation.js","components/AddContactForm/consts/inputsList.js","components/AddContactForm/AddContactFormStyles.js","components/AddContactForm/AddContactForm.jsx","views/ContactsView.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/PersonAdd.js"],"sourcesContent":["export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","export const styles = {\n  error: { color: 'error.main', fontSize: '12px' },\n};\n","import PropTypes from 'prop-types';\nimport { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { styles } from './FormFieldStyles';\n\nexport const FormField = ({ inputName, type, id, register, errors }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  return (\n    <>\n      <FormControl error={isError(inputName)}>\n        <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n        {type !== 'password' ? (\n          <OutlinedInput\n            id={id}\n            type={type}\n            label={capitalize(inputName)}\n            aria-describedby={id}\n            {...register(inputName, { required: 'This field is required.' })}\n          />\n        ) : (\n          <OutlinedInput\n            id={id}\n            type={showPassword ? 'text' : 'password'}\n            label={capitalize(inputName)}\n            aria-describedby={id}\n            {...register(inputName, { required: 'This field is required.' })}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        )}\n        <FormHelperText\n          component={ErrorMessage}\n          id={id}\n          errors={errors}\n          name={inputName}\n          render={({ message }) => (\n            <Typography sx={styles.error}>{message}</Typography>\n          )}\n        />\n      </FormControl>\n    </>\n  );\n};\n\nFormField.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n","export const styles = {\n  section: { paddingTop: '20px', paddingBottom: '20px' },\n  title: { textAlign: 'center' },\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './SectionStyles';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={styles.section}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\" sx={styles.title}>\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","export const styles = {\n  wrap: {\n    display: 'inline-flex',\n    bgcolor: 'extra.modalBGC',\n    padding: '20px',\n    borderRadius: '3px',\n    position: 'absolute',\n    top: { xs: '35%', sm: '50%' },\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n","import { Box, Modal } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './ModalWindowStyles';\n\nexport const ModalWindow = ({ children, onCloseModal }) => {\n  return (\n    <Modal\n      open\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={styles.wrap}>{children}</Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  children: PropTypes.element,\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst numberRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('This field is required')\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n","import { nanoid } from 'nanoid';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nameInputId,\n  },\n  {\n    inputName: 'number',\n    type: 'tel',\n    id: numberInputId,\n  },\n];\n","export const styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    width: { xs: '330px', sm: '400px' },\n    margin: '0 auto',\n  },\n  btnList: { display: 'flex', justifyContent: 'center', gap: '20px' },\n};\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks';\nimport { updateContact } from 'redux/contacts/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './consts/inputValidation';\n\nimport { Box, Button } from '@mui/material';\nimport { FormField } from 'components/FormField';\nimport { inputsList } from './consts/inputsList';\n\nimport PropTypes from 'prop-types';\nimport { styles } from './UpdateContactFormStyles';\nimport { toast } from 'react-toastify';\n\nexport const UpdateContactForm = ({ id, onCloseModal }) => {\n  const { contacts } = useContacts();\n  const { name, number } = contacts.find(item => item.id === id);\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues: {\n      name,\n      number,\n    },\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const isChanged = data.name === name && data.number === number;\n    if (isChanged) return onCloseModal();\n    const contactInfo = contacts.find(({ name }) => name === data.name);\n    if (contactInfo) return toast(`${data.name} is already in your contacts`);\n    dispatch(updateContact({ id, ...data }));\n    toast(`${data.name} was updated`);\n    reset();\n    onCloseModal();\n  };\n\n  return (\n    <Box component=\"form\" sx={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          errors={errors}\n        />\n      ))}\n      <Box sx={styles.btnList}>\n        <Button type=\"submit\" variant=\"contained\">\n          Update Contact\n        </Button>\n        <Button type=\"button\" variant=\"outlined\" onClick={() => onCloseModal()}>\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nUpdateContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n","export const styles = {\n  item: {\n    padding: '10px',\n    bgcolor: 'extra.contactItemBGC',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  itemContentWrap: { display: 'flex', gap: '10px', alignItems: 'center' },\n  btnList: { display: 'flex', gap: '5px', alignItems: 'center' },\n};\n","import { memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Box, IconButton, Tooltip, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ModalWindow } from 'components/ModalWindow';\nimport { UpdateContactForm } from 'components/UpdateContactForm';\nimport { toast } from 'react-toastify';\nimport { styles } from './ContactItemStyles';\n\nexport const ContactItem = memo(function ContactItem({ contact }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const { id, name, number, avatar } = contact;\n  const dispatch = useDispatch();\n\n  const handleToggleModal = () => setShowModal(!showModal);\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast(`${name} was deleted from your contatcs`);\n  };\n\n  return (\n    <>\n      <Box component=\"li\" sx={styles.item}>\n        <Box sx={styles.itemContentWrap}>\n          <Avatar alt={avatar.alt} src={avatar.src} />\n          <Box>\n            <Typography>{name}</Typography>\n            <Typography>{number}</Typography>\n          </Box>\n        </Box>\n        <Box component=\"ul\" sx={styles.btnList}>\n          <Tooltip title=\"Update contact\">\n            <IconButton aria-label=\"update\" onClick={handleToggleModal}>\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Dlete contact\">\n            <IconButton aria-label=\"delete\" onClick={handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      {showModal && (\n        <ModalWindow onCloseModal={handleToggleModal}>\n          <UpdateContactForm id={id} onCloseModal={handleToggleModal} />\n        </ModalWindow>\n      )}\n    </>\n  );\n});\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","export const styles = {\n  text: { textAlign: 'center', padding: '30px' },\n};\n","import { Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styles } from './InfoTextStyles';\n\nexport const InfoText = ({ children, color = 'getContrastText' }) => {\n  return (\n    <Typography component=\"p\" sx={{ ...styles.text, color }}>\n      {children}\n    </Typography>\n  );\n};\n\nInfoText.propTypes = {\n  children: PropTypes.any,\n  color: PropTypes.string,\n};\n","export const styles = {\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n  },\n};\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useContacts } from 'hooks';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { ContactItem } from 'components/ContactItem';\nimport { Loader } from 'components/Loader';\nimport { InfoText } from 'components/InfoText';\nimport { List } from '@mui/material';\nimport { styles } from './ContactListStyles';\n\nexport const ContactList = () => {\n  const { isLoading, error, contacts } = useContacts();\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOk = !isLoading && !error;\n  const showError = !isLoading && error;\n  const empty = isOk && filter === '' && contacts.length === 0;\n  const noMatches = isOk && filter !== '' && contacts.length === 0;\n  const showList = !error && contacts.length !== 0;\n\n  return (\n    <>\n      {showList && (\n        <List sx={styles.list}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n      {isLoading && <Loader />}\n      {showError && <InfoText>Sorry, something went wrong</InfoText>}\n      {empty && <InfoText>Your contacts list is empty</InfoText>}\n      {noMatches && <InfoText>Sorry, there is no such contacts</InfoText>}\n    </>\n  );\n};\n","export const styles = {\n  wrap: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { nanoid } from 'nanoid';\nimport { Box, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nimport { styles } from './FilterStyles';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => dispatch(setFilter(e.currentTarget.value.trim()));\n\n  return (\n    <Box sx={styles.wrap}>\n      <FormControl sx={{ width: '350px' }}>\n        <InputLabel htmlFor={filterId}>Search</InputLabel>\n        <OutlinedInput\n          id={filterId}\n          type=\"text\"\n          label=\"Search\"\n          onChange={handleChange}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","export const styles = {\n  btn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '14px',\n    bgcolor: 'primary.400',\n    color: 'common.white',\n    position: 'fixed',\n    top: '87%',\n    left: { xs: '80%', sm: '90%' },\n    '&:hover': {\n      bgcolor: 'primary.300',\n    },\n  },\n};\n","import { IconButton, Tooltip } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport PropTypes from 'prop-types';\nimport { styles } from './AddContactButtonStyles';\n\nexport const AddContactButton = ({ onOpenModal }) => (\n  <Tooltip title=\"Add contact\">\n    <IconButton\n      variant=\"contained\"\n      sx={styles.btn}\n      type=\"button\"\n      onClick={onOpenModal}\n    >\n      <PersonAddIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nAddContactButton.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst numberRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nexport const Schema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('This field is required')\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n","import { nanoid } from 'nanoid';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nameInputId,\n  },\n  {\n    inputName: 'number',\n    type: 'tel',\n    id: numberInputId,\n  },\n];\n","export const styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    width: { xs: '330px', sm: '400px' },\n    margin: '0 auto',\n  },\n};\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Schema } from './consts/inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box, Button } from '@mui/material';\nimport { FormField } from 'components/FormField';\nimport { inputsList } from './consts/inputsList';\n\nimport PropTypes from 'prop-types';\nimport { styles } from './AddContactFormStyles';\nimport { toast } from 'react-toastify';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const AddContactForm = ({ onCloseModal }) => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(Schema),\n    defaultValues,\n  });\n  const { contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const contactInfo = contacts.find(({ name }) => name === data.name);\n    if (contactInfo) return toast(`${data.name} is already in your contacts`);\n    dispatch(addContact(data));\n    toast(`${data.name} was added to your contacts`);\n    reset();\n    onCloseModal();\n  };\n\n  return (\n    <Box component=\"form\" sx={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          errors={errors}\n        />\n      ))}\n      <Box sx={{ display: 'flex', justifyContent: 'center', gap: '20px' }}>\n        <Button type=\"submit\" variant=\"contained\">\n          Add Contact\n        </Button>\n        <Button type=\"button\" variant=\"outlined\" onClick={() => onCloseModal()}>\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nAddContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { Section } from 'components/Section';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { AddContactButton } from 'components/AddContactButton';\nimport { ModalWindow } from 'components/ModalWindow';\nimport { AddContactForm } from 'components/AddContactForm';\n\nconst ContactsView = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleToggleModal = () => setShowModal(!showModal);\n\n  return (\n    <>\n      <Section>\n        <Filter />\n      </Section>\n      <Section>\n        <ContactList />\n        <AddContactButton onOpenModal={handleToggleModal} />\n      </Section>\n      {showModal && (\n        <ModalWindow onCloseModal={handleToggleModal}>\n          <AddContactForm onCloseModal={handleToggleModal} />\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n\nexport default ContactsView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');\nexports.default = _default;"],"names":["capitalize","string","charAt","toUpperCase","slice","styles","error","color","fontSize","FormField","inputName","type","id","register","errors","useState","showPassword","setShowPassword","FormControl","isError","InputLabel","htmlFor","OutlinedInput","label","required","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","Visibility","VisibilityOff","FormHelperText","component","ErrorMessage","name","render","message","Typography","sx","section","paddingTop","paddingBottom","title","textAlign","Section","children","Box","Container","variant","getDefaultValues","arr","reduce","acc","item","wrap","display","bgcolor","padding","borderRadius","top","xs","sm","left","transform","ModalWindow","onCloseModal","Modal","open","onClose","nameRegExp","RegExp","SignupSchema","Yup","shape","matches","number","inputsList","nanoid","form","flexDirection","gap","width","margin","btnList","justifyContent","UpdateContactForm","contacts","useContacts","find","useForm","resolver","yupResolver","defaultValues","formState","handleSubmit","reset","dispatch","useDispatch","onSubmit","data","toast","updateContact","map","Button","alignItems","itemContentWrap","ContactItem","memo","contact","showModal","setShowModal","avatar","handleToggleModal","Avatar","alt","src","Tooltip","Edit","deleteContact","Delete","InfoText","list","ContactList","isLoading","filter","useSelector","selectFilter","useEffect","fetchContacts","isOk","showError","empty","length","noMatches","showList","List","Loader","filterId","Filter","onChange","e","setFilter","currentTarget","value","trim","btn","AddContactButton","onOpenModal","PersonAdd","Schema","AddContactForm","addContact","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}