{"version":3,"file":"static/js/313.75ae7c41.chunk.js","mappings":"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","sources":["components/GlobalStyles.styled.jsx","utils/capitalize.js","components/common/FormField/FormField.jsx","components/common/Section/Section.jsx","utils/getDefaultValues.js","components/RegisterForm/inputValidation.js","components/RegisterForm/inputsList.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { List } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled(List)`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n","export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { capitalize } from 'utils/capitalize';\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\n\nexport const FormField = ({\n  inputName,\n  type,\n  id,\n  register,\n  isError,\n  getErrorMassage,\n}) => {\n  return (\n    <FormControl error={isError(inputName)}>\n      <InputLabel htmlFor={id}>{capitalize(inputName)}</InputLabel>\n      <OutlinedInput\n        id={id}\n        type={type}\n        label={capitalize(inputName)}\n        aria-describedby={id}\n        {...register(inputName)}\n      />\n      {isError(inputName) && (\n        <FormHelperText id={id}>{getErrorMassage(inputName)}</FormHelperText>\n      )}\n    </FormControl>\n  );\n};\n","import { Box, Container, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box component=\"section\" sx={{ paddingTop: '20px', paddingBottom: '20px' }}>\n      <Container>\n        {title && (\n          <Typography component=\"h2\" variant=\"h2\">\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","export const getDefaultValues = arr =>\n  arr.reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.inputName]: '',\n    }),\n    {}\n  );\n","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Mininum 2 characters')\n    .max(30, 'Maximum 30 characters')\n    .required(),\n  email: Yup.string().email('Invalid email format').required(),\n  password: Yup.string()\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    .required(),\n});\n","import { nanoid } from 'nanoid';\n\nconst usernameInputId = nanoid();\nconst emailInputId = nanoid();\nconst passwordInputId = nanoid();\n\nexport const inputsList = [\n  {\n    inputName: 'username',\n    type: 'text',\n    id: usernameInputId,\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: emailInputId,\n  },\n  {\n    inputName: 'password',\n    type: 'password',\n    id: passwordInputId,\n  },\n];\n","import { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SignupSchema } from './inputValidation';\nimport { getDefaultValues } from 'utils/getDefaultValues';\n\nimport { Box } from '@mui/system';\nimport { FormField } from 'components/common/FormField';\nimport { inputsList } from './inputsList';\nimport { CommonButton } from 'components/common/CommonButton';\n\nconst defaultValues = getDefaultValues(inputsList);\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    defaultValues,\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(registration(data));\n    reset();\n  };\n\n  const isError = inputName => {\n    if (errors[inputName]) return true;\n    return false;\n  };\n\n  const getErrorMassage = inputName => errors[inputName].message;\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        width: '400px',\n        margin: '0 auto',\n      }}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {inputsList.map(({ inputName, type, id }) => (\n        <FormField\n          key={id}\n          inputName={inputName}\n          type={type}\n          id={id}\n          register={register}\n          isError={isError}\n          getErrorMassage={getErrorMassage}\n        />\n      ))}\n      <CommonButton type=\"submit\" fullWidth variant=\"contained\">\n        Register\n      </CommonButton>\n    </Box>\n  );\n};\n","import { Box, Avatar, Link, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Section } from 'components/common/Section';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { StyledLink } from 'components/GlobalStyles.styled';\n\nconst RegisterView = () => {\n  return (\n    <Section>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\n          Registration\n        </Typography>\n        <RegisterForm />\n        <Link component={StyledLink} sx={{ mt: 3 }} to=\"/login\">\n          Already have an account? Log in\n        </Link>\n      </Box>\n    </Section>\n  );\n};\n\nexport default RegisterView;\n"],"names":["StyledLink","styled","List","Link","capitalize","string","charAt","toUpperCase","slice","FormField","inputName","type","id","register","isError","getErrorMassage","FormControl","error","InputLabel","htmlFor","OutlinedInput","label","FormHelperText","Section","title","children","Box","component","sx","paddingTop","paddingBottom","Container","Typography","variant","getDefaultValues","arr","reduce","acc","item","SignupSchema","Yup","shape","username","min","max","required","email","password","matches","inputsList","nanoid","defaultValues","RegisterForm","useForm","resolver","yupResolver","errors","formState","handleSubmit","reset","dispatch","useDispatch","message","display","flexDirection","gap","width","margin","onSubmit","data","registration","map","CommonButton","fullWidth","marginTop","alignItems","Avatar","m","bgcolor","LockOutlined","mb","mt","to"],"sourceRoot":""}